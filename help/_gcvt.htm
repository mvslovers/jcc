<HTML>
<HEAD>
<TITLE>_gcvt</TITLE>
</HEAD>
<BODY>

<font face="verdana,arial,helvetica" size="2">
<H2>_gcvt</H2>

<P>Converts a double precision floating number to a string.</P>

<P><B>char * _gcvt (double </B><I>value</I><B>, int </B><I>count</I><B>, char * </B><I>buffer</I><B>);</B></P>
<P><B>char * gcvt (double </B><I>value</I><B>, int </B><I>count</I><B>, char * </B><I>buffer</I><B>);</B></P>

<TABLE border=1 cellpadding=5 cols=1 frame=below rules=rows>

<TR VALIGN="top">
<TD width=100%><B>Required Header</B></TD>
</TR>

<TR VALIGN="top">
<TD width=100%>&lt;stdlib.h&gt;</TD>
</TR>

</TABLE><BR>

<P><B>Return Value</B></P>

<P>Each of these functions returns a pointer to the string representation of a number. </P>

<P><B>Parameters</B></P>

<P><I>value</I></P>

<P>&nbsp;&nbsp;The value to be converted into a string</P>

<P><I>count</I></P>

<P>&nbsp;&nbsp;The number of digits to store in the string</P>

<P><I>buffer</I></P>

<P>&nbsp;&nbsp;The location to store the string result</P>

<P><B>Remarks</B></P>

<P>The <B>_gcvt</B> function converts <I>value</I> into a null-terminated string
of digits with, possibly, a sign, decimal point and exponent value.  The function
attempts to output a string without exponent information but falls back on this
option when the resulting string is too long to fit within <I>count</I> digits.</P>

<P>Care should be taken with the length of <I>buffer</I>, as the value of <I>count</I>
does not represent the number of characters required to form the entire result.</P>

<P><a target="appl" href="stdlibh.htm">Standard Library</a></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;
<a target="appl" href="atof.htm">atof</a>,
<a target="appl" href="_ecvt.htm">_ecvt</a>,
<a target="appl" href="_fcvt.htm">_fcvt</a>,
<a target="appl" href="strtod.htm">strtod</a>
</P>

</font>
</BODY>
</HTML>
