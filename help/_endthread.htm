<HTML>
<HEAD>
<TITLE>_endthread</TITLE>
</HEAD>
<BODY>

<font face="verdana,arial,helvetica" size="2">
<H2>_endthread</H2>

<P>Tells the system that the current thread has finished processing.</P>

<P><B>void _endthread (int </B><I>value</I><B>);</B></P>
<P><B>void endthread (int </B><I>value</I><B>);</B></P>

<TABLE border=1 cellpadding=5 cols=1 frame=below rules=rows>

<TR VALIGN="top">
<TD width=100%><B>Required Header</B></TD>
</TR>

<TR VALIGN="top">
<TD width=100%>&lt;process.h&gt;</TD>
</TR>

</TABLE><BR>

<P><B>Return Value</B></P>

<P>None. </P>

<P><B>Parameters</B></P>

<P><I>value</I></P>

<P>&nbsp;&nbsp;The return value passed to <a target="appl" href="_syncthread.htm">_syncthread</a></P>

<P><B>Remarks</B></P>

<P>The <B>_endthread</B> function signals that the current thread has finished execution and has
a return <I>value</I> that should be passed to <a target="appl" href="_syncthread.htm">_syncthread</a>.
It is not necessary to call <B>_endthread</B> since the threads entry point was a function pointer
which returned an integer, and the ending of that function implicitly calls <B>_endthread</B>.
However <B>_endthread</B> may be used from within a deep function nesting to finish thread execution.</P>

<P><a target="appl" href="processh.htm">Process and Threads</a></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;
<a target="appl" href="_beginthread.htm">_beginthread</a>,
<a target="appl" href="_syncthread.htm">_syncthread</a>,
<a target="appl" href="_thdpriority.htm">_threadpriority</a>,
<a target="appl" href="_thdstatus.htm">_threadstatus</a>
</P>

</font>
</BODY>
</HTML>
