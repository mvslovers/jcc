<HTML>
<HEAD>
<TITLE>strtok</TITLE>
</HEAD>
<BODY>

<font face="verdana,arial,helvetica" size="2">
<H2>strtok</H2>

<P>Find the next token in a string.</P>

<P><B>char * strtok (char * </B><I>tokenstr</I><B>, char * </B><I>delimitstr</I><B>);</B></P>

<TABLE border=1 cellpadding=5 cols=1 frame=below rules=rows>

<TR VALIGN="top">
<TD width=100%><B>Required Header</B></TD>
</TR>

<TR VALIGN="top">
<TD width=100%>&lt;string.h&gt;</TD>
</TR>

</TABLE><BR>

<P><B>Return Value</B></P>

<P>A pointer to a token in string is returned.  <B>NULL</B> is returned when there are no more
tokens in the string.</P>

<P><B>Parameters</B></P>

<P><I>tokenstr</I></P>

<P>&nbsp;&nbsp;A string</P>

<P><I>delimitstr</I></P>

<P>&nbsp;&nbsp;A string containing a set of delimiter characters</P>

<P><B>Remarks</B></P>

<P>The <B>strtok</B> function skips leading delimiters on the first call, where the <I>tokenstr</I>
value must be passed.  On successive calls, <I>tokenstr</I> must be set to <B>NULL</B> which will
allow the function to continue searching the initial string.  <I>tokenstr</I> is modified for
each call to <B>strtok</B> by adding a null-terminator character at the end of each token found.</P>

The <B>strtok</B> function is thread-safe, but a single thread cannot scan two different <I>tokenstr</I>
strings at the same time due to a static character pointer used internally by the routine.<p>

<I>delimitstr</I> may be varied as required on successive calls to <B>strtok</B>.<P>

<P><a target="appl" href="stringh.htm">String</a></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;
<a target="appl" href="strcspn.htm">strcspn</a>,
<a target="appl" href="strspn.htm">strspn</a>,
<a target="appl" href="_strspnp.htm">_strspnp</a>
</P>

</font>
</BODY>
</HTML>
